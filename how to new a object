java如何 new 一个对象
先判断jvm是否加载并实例化了包含该对象的类
如果否，jvm则先加载并实例化该类，其步骤为
一、jvm加载该类
 1.ClassLoader(类加载器)把该类加载到内存区的方法区，使用方式是利用类加载器的双亲委托模式。
     即该类加载器收到类加载的请求，不尝试自己加载此类，而是委托父类加载器去完成，父类在让其父类加载，一直到最顶层的启动类加载器。但父类加载器不能加载该类，在其范围权限内找不到该类，就让其子类类加载器加载，一直往下直至找到类加载器能加载该类。
     类加载器根据类的全限定名读取此类的二进制字节流的到jvm中，存放在方法区，将其转化为一个class对象实例
 2.验证：验证class文件格式是否正确，语义验证，操作验证
 3.给静态实例分配内存空间，并初始化值，给被final修饰的static变量赋值
 4.解析：将常量池中的符号引用转换为直接引用。
 二、初始化该类
 1.给static变量赋值
 2.调用static代码块              //只有jvm才能调用static代码块。如果多线程需要初始化一个类，只允许其中一个线程对其执行初始化操作
 3.先初始化父类在初始化子类
 三、创建对象
 1.在堆区分配对象所需要的内存    //包括子类和父类所有的实例变量内存，但不包括静态变量
 2.对所有的实例变量赋默认值     //将方法区内的实例变量拷贝到堆区。赋默认值
 3.执行实例初始化代码          //先初始化父类在初始化子类，先执行示例代码块再是构造方法
4.如果有 Child c = new Child()形式的c引用的话，在栈区定义Child类型引用变量c,然后将堆区对象的地址复制给他。     //每个子类对象持有父类对象的引用，在内部通过super关键字进行引用，在外部不可访问
